name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/airline-management-system-0.0.1-SNAPSHOT.jar

  build-and-push-docker-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target/

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (Staging)
        run: |
          docker build -t shehan0000/airline-management-system:staging .
          docker push shehan0000/airline-management-system:staging

      - name: Notify on success
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Staging Build Success - Airline Management System"
          to: your-real-email@gmail.com  # Replace with your actual email
          from: "GitHub Actions <your-real-email@gmail.com>"  # Replace with your actual email
          body: "Staging build and push completed successfully."

      - name: Notify on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Staging Build Failed - Airline Management System"
          to: your-real-email@gmail.com  # Replace with your actual email
          from: "GitHub Actions <your-real-email@gmail.com>"  # Replace with your actual email
          body: "Staging build or push failed. Check GitHub Actions logs."

  deploy-to-staging:
    needs: build-and-push-docker-staging
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS EC2 (Staging)
        env:
          PRIVATE_KEY: ${{ secrets.AWS_EC2_STAGING_SSH_KEY }}
          HOST: ${{ secrets.AWS_EC2_STAGING_HOST }}
          USER: ${{ secrets.AWS_EC2_STAGING_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << 'EOF'
            docker pull shehan0000/airline-management-system:staging
            docker stop airline-staging || true
            docker rm airline-staging || true
            docker run -d --name airline-staging \
              -p 8080:8080 \
              -e DB_URL=${{ secrets.DB_URL_STAGING }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME_STAGING }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD_STAGING }} \
              shehan0000/airline-management-system:staging
          EOF

  deploy-to-production:
    needs: deploy-to-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to AWS EC2 (Production)
        env:
          PRIVATE_KEY: ${{ secrets.AWS_EC2_PROD_SSH_KEY }}
          HOST: ${{ secrets.AWS_EC2_PROD_HOST }}
          USER: ${{ secrets.AWS_EC2_PROD_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << 'EOF'
            docker pull shehan0000/airline-management-system:staging
            docker stop airline-prod || true
            docker rm airline-prod || true
            docker run -d --name airline-prod \
              -p 8080:8080 \
              -e DB_URL=${{ secrets.DB_URL_PROD }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME_PROD }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD_PROD }} \
              shehan0000/airline-management-system:staging
          EOF

      - name: Notify on success
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Production Deploy Success - Airline Management System"
          to: your-real-email@gmail.com  # Replace with your actual email
          from: "GitHub Actions <your-real-email@gmail.com>"  # Replace with your actual email
          body: "Production deployment completed successfully."

      - name: Notify on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Production Deploy Failed - Airline Management System"
          to: your-real-email@gmail.com  # Replace with your actual email
          from: "GitHub Actions <your-real-email@gmail.com>"  # Replace with your actual email
          body: "Production deployment failed. Check GitHub Actions logs."
